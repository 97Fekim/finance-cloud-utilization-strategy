[AWS DVA-C02:  1~100 (59/100)]
1트: 1, 3, 4, 7, 12, 18, 20, 21, 25, 29, 30, 32, 34, 36, 44, 45, 47, 49, 53, 55, 56, 57, 59, 61, 66, 67, 71, 73, 74, 75, 76, 82, 84, 85, 88, 90, 93, 95, 98, 100
2트: 12, 20, 21, 34, 55, 56, 59, 66, 67, 74, 75, 76, 84, 88, 95, 98, 100

[AWS DVA-C02:  101~200 (59/100)]
1트: 101, 103, 104, 107, 109, 111, 113, 114, 117, 119, 122, 127, 128, 133, 137, 141, 145, 147, 148, 153, 154, 155, 156, 160, 161, 162, 172, 177, 178, 183, 186, 187, 189, 191, 192, 194, 195, 197, 199
2트: 133, 162, 165, 197

[AWS DVA-C02:  201~300 (56/100)]
1트: 204, 208, 212, 213, 218, 219, 220, 221, 222, 223, 226, 227, 234, 240, 241, 243, 244, 246, 247, 250, 252, 253, 258, 261, 262, 264, 265, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 287, 290, 295, 296, 297
2트: 204, 219, 221, 222, 226, 242, 244, 250, 252, 262, 265, 275, 297

[AWS DVA-C02:  301~469 (지뢰가/너무많다)]
1트: 307, 314, 318, 324(답A임), 327, 334, 335, 338, 340, 342, 344, 345, 347(답C임), 352, 354, 356, 357, 362, 369, 370, 384, 388, 389, 391, 392, 393, 396, 397(답B임), 399, 406, 407, 408, 409, 411, 413, 417(A임), 420, 422, 423, 424, 432(답:C), 433(답:C,D), 435(C), 440, 443, 454, 455, 461


[다시볼것]

3	: SSH Keys - SSH Keys in IAM Console, HTTPS - CLI Credential helper or Git Credentials for IAM
4	: 잘 모르겠음...
21	: ASG, ELB, RDS, EC2, S3, SNS
25	: 스텝이 아니라, 2개 고르기
34	: execution role은 하나만 assume하는걸 권장함. A는 role이 두개가 되고, B는 기존 execution role이 변경되버림.
45	: A-따로 설정 안해도 CloudWatch로 로그를 보냄, B-Default로 보내므로 트리거 불필요함, D-B와 동일한 이유임.
53	: VPC flow logs 관해서 학습 요망
59	: VPC, 서브넷, NAT 게이트웨이 관해서 학습 요망
67	: before "sent" to S3 이므로 Client Side Encryption이 정답임.
75	: All at once는 롤백 기능이 없음. 직접 이전버전으로 재배포 해야함.
100	: A,C 중 하난데, 재시작이 아니라 업데이트 해야 하므로 C가 오답임. 따라서 A가 정답.
109	: 잘 모르겠음...
114	: SQS에는 "우선순위"라는 기능이 없다.
172	: Kinesis Streams도 SSE가 가능하다.
183	: 가장 최근에 성공한 버전으로 새로운 배포ID를 가진 배포를 수행.
192	: API Key 관련 학습 요망.
208	: BeanStalk의 버전 제한을 0으로 두면, 이전 버전을 삭제하지 않고 유지한다.
212	: HTTPS만 허용하려면, SecureTransport=false를 Deny하는 정책을 적용한다.
218	: API Gateway에 단계적배포 같은 기능은 없다. 새로운 stage를 배포하고 URL을 교체해야 함.
219	: DynamoDB 관련하여 AWS문의를 통해 limit를 증가할 수 있는항목은 1)테이블 갯수, 2)provisioned throughputs
221	: 하나의 API Gateway에 하나의 Lambda function을 연결. 각각 따로 로그를 찍게 하는게 좋은가보다.
244	: 잘 모르겠음..
247	: dynamoDB의 병렬스캔 기능을 사용하면, provisioned throughputs에 대한 수요가 지나치게 높아진다. 이는 문제의 조건과 상충된다
252	: Credentials Provider Chain. 1)CLI Options 2)환경변수 3)configure file ex)aws config ... 4)컨테이너 credentials 5)instance profiles
262	: DynamoDB Streams로 Lambda invoke는 동기트리거만 가능.
275	: 심플하게 생각하기.
276	: 맨 앞부터 무작위일수록 좋다.
278	: SSL Termination 개념 이제 알지??
284	: Lambda는 자동으로 Scale out 한다.
287	: trust policy = 서비스가 role을 assume할 수 있도록 허용함.
307	: instance profile credentials를 확인하여 EC2의 credential을 확인.
314	: EC2 인스턴스는 자신의 보안정책에 따라 source/destination이 유효한지 체크함. 이를 풀어야 함.
324	: annotation과 metadata의 차이 = annotation은 index&searching용, metadata는 그저 key/value pair일뿐.
334	: AMI는 동일 Region끼리 사용한다(Not country, Not AZ). 원한다면 다른 Region으로 복사는 가능하다. (AZ은 데이터센터이다. Region은 2개 이상의 AZ로 구성된 지리적 영역이다.)
338	: Lambda의 concurrency 제한은 1,000이다. 문제 조건 concurrency는 5,000이다. 따라서 문의해서 늘려야 한다.
340	: EC2 메타데이터에서 역할 이름은 조회할 수 있지만, 상세 역할은 조회할 수 없음. --dry--run = 작업에 필요한 권한이 있는지 확인할 때 사용하는 명령어.
342	: 비율을 제한하면서 병렬스캔을 사용하니깐, RCU 초과되는 문제는 발생하지 않을것이다?
344	: "새로운 환경"을 만드는게 포인트.
345	: TopicArn, Subject, Message
347	: 2020년 이후로 S3의 모든 API에 최종일관성이 적용됨.
352	: 옛날에는 무작위 접두사를 S3 key에 붙이는게 권장됐지만, 지금은 timestamp가 권장됨.
357	: 문제 조건에 Global이 있어서 CloudFront가 더 합리적인가..
362	: 여러 장치에서 사용하는 사용자 관리 => Cognito Sync
370	: SQS API 여러가지 기억하기 (pdf.451p)
391	: Rolling Batch 방식은 첫번째 배치가 실패하는 경우를 제외하면, Rolling과 마찬가지로 falied 인스턴스에 의한 영향이 존재한다.
392	: 잘 모르겠음..
393	: 커스템 메트릭을 CloudWatch로 보내려면 putMetricData API를 사용해야 함.
394	: CodeCommit.Client 를 인스턴스화하고, putFile, DeleteFile, GetFile 등등 자유롭게 활용 가능함.
399	: 기존 log groups을 KMS Key와 연동하려면, CLI에서 associate-kms-key 를 사용한다.
408	: pdf.421p 학습요망
409	: [CUSTOM][.][s3-website]['.'or'-'][region].amazonaws.com
417	: CodePipeline의 이벤트 알림은 SNS를 사용한다.
420	: 잘 모르겠음..
422	: 4KB 이상 파일에는 generateDataKey API를 사용한다.
423	: BatchWriteItem은 update를 지원하지 않는다.
433	: SAM CLI는 build+deploy OR build+(package)+deploy



[유데미 1회차]
TODO


[유데미 2회차]
1	: AutoScaling 정책은 최대갯수를 넘겨서 Scale out 하지 않는다.
2	: Identity Pool 만으로는 사용자 관리가 불가능하다. 또한 User Pool과 함께 User Pool authorizer를 사용하면 AWS 서비스에 대한 인증을 처리할 수 있다.
4	: 롤링,롤링배치 방식은 fail시 수동 재배포를 해야 한다.
5	: 다시보자. 
9	: API Gateway 에서의 인증 - 유저풀(O), 람다Authorizer(O), Standard IAM role and policy(O), STS(X)
13	: SQS는 저장 메시지 갯수 제한이 없다. 단 전달중인 메시지는 약 12만개의 제한이 있다(전달중=poll했지만 delete는 하지 않음)
14	: EBS 볼륨은 동일 AZ에서만 사용 가능하다(AZ Locking)
16	: Zonal Reserved Instances (영역 예약 인스턴스)만 용량 예약이 가능하다. Regional Reserved Instances (지역 예약 인스턴스)는 용량 예약이 불가능하다.
17	: Firehose의 지원대상 = S3(O), Elastic Search(O), Amazon Redshift(O), Elastic Cache(X)
19	: ASG는 unhealthy한 인스턴스를 종료하고, 원하는 용량이 될때까지 새로운 인스턴스를 시작한다.
21	: NACL은 stateless하므로, Inbound/Outbound 모두 규칙을 설정해줘야 원활히 송수신 가능하다.
22	: 자격증명을 객체스토리지이나 파일시스템에 저장하는 답안은 피하자.
23	: DynamoDB -> S3  = EMR(O), Glue(O), Data Pipeline(O), DynamoDB 온디맨드 백업(X)
34  : VPC 엔드포인트를 활용하여 AWS 서비스의 엔드포인트를 private하게 관리할 수 있다.
35  : 서브넷은 하나의 라우팅 테이블에만 연결할 수 있다. 서브넷은 특정 라우팅 테이블과 명시적으로 연결되지 않은 경우, 기본 라우팅 테이블과 암시적으로 연결된다.
36  : API Gateway 새 버전을 만들면 새로 배포해야 한다. staging variable 만으로 관리할 수 없다.
41  : io1의 볼륨대비 IOPS 비율은 최대 1:50이다. 즉 볼륨 크기가 200GiB이라면, 10,000IOPS를 넘을 수 없다.   #io1은 곱하기50임
45	: 하나의 private key로 여러개의 public key를 복사하여 사용할 수 있다. 복사된 public key는 여러 region에서 사용할 수 있다.
46	: dynamoDB UpdateItem API는 기존에 없는 항목에 대해서 Insert를 수행한다.
50	: SQS의 Delay time은 최소 0초(Default) ~ 최대 15분 이다.
51	: CloudFormation의 파라미터는 모두 독립적이며 서로 종속될 수 없다. 가능한거=Stirng,Number,List,CommaDelimitedList, EC2::A::B
54	: CodeDeploy 절차 = 1)ApplicationStop -> 2)DownloadBundle -> 3)BeforeInstall -> 4)Install -> 5)AfterInstall -> 6)ApplicationStart -> 7)ValidateService 8)~~~Traffic
55	: Lambda는 1,000 동시성까지는 Auto Scale Out 하지만, 그 이상으로 늘리려면 예약 동시성을 갖는 Auto Scaling을 구성해야 한다.
58	: 100IOP(33.33GiB) < gp2 IOPS < 16,000IOPS(5.3TiB)   #gp2는 곱하기30임
60	: private key는 URL을 서명할때, public key는 CloudFront에서 서명확인.  루트유저로 2개의 key pair를 가질 수 있고, 키 그룹을 활용하면 4개의 그룹, 그룹당 5개의 공개키를 가질 수 있음.
61	: State Machine의 Task 정의에 Resource는 필수이다. Resource가 없다면 Task가 아니라 Pass타입이다.
62	: 4KB가 넘는 파일은 KMS로 직접 암/복호화 불가능함. 봉투 암호화 사용해야 함.
63	: 표준 메트릭인지, 커스텀 메트릭인지 항상 주의해야 함.


[유데미 3회차]
1	: ReceiveMessage 작업 대기시간이 0보다 크면 Long Polling이 적용된다. 최대 대기 시간은 20초이다.
4	: IAM 으로 인증이 가능한 DB = MySQL, MariaDB, Postgre  인증에 토큰을 사용하며, 수명은 15분이다.
5	: 클라이언트 주소를 얻으려면 X-Forwarded-For(O), X-Forwarded-From(O)
7	: Read Replica = Read 워크로드가 많을때 적합,  Multi-AZ = 고가용성에 적합.
9	: Lambda 환경변수의 크기 제한은 4KB이다. 갯수 제한은 없다.
10	: Kinesis Data Streams는 Kinesis Data Firehose 보다 Downstream 구축에 더 비용 효율적이다.
14	: CloudWatch Event는 Lambda 코드의 오류를 식별하고 알릴 수 없다. 따라서 로그는 직접 찍어야 한다.
19	: Kinesis Data Streams는 기본적으로 24시간동안 데이터를 보존한다. 요청한다면, 최대 365일까지 보관 가능하다.
20	: 
 - 실행중인 EC2 Instance에 모니터링을 활성화 하려면 aws ec2 monitor-instances --instance-ids [ID} 
   모니터링을 활성화하여 시작하려면 aws ec2 run-instances --image-id [AMI-ID] --monitoring Enabled=true
21	: S3 복사하면? -> 1)버전ID 및 메타데이터 유지, 2)새 객체만 복제, 3)교차Region복제로 태그 복제 가능, 4)수명주기는 복제X, 5)동일Region, 교차Region 모두 버킷/접두사/태그 수준에서 구성가능
22	: Default S3 Ownership을 사용하면, 업로드 하는 사람이 객체의 주인이 됨.
23	: Lambda-DLQ 통합은 일반적으로 Lambda를 비동기 호출할때 사용한다. 동기호출에 사용하는건 의미가 없다.
25	: Beanstalk 에서 특정작업을 Dedicated Worker Environment에 분리할 수 있다.
27	: ECS 클러스터에서 STOPPED 상태의 인스턴스를 종료시키면 자동제거되지 않는다. AWS CLI를 통해 인스턴스를 직접 등록취소 해줘야 한다.
28	: CodeDeploy Agent 구성 파일의 max_revisions 옵션을 사용하면, 보관하는 revision 갯수를 제한할 수 있다.
30	: pseudo parameter = 사전에 정의된 파라미터 (EX. InstanceID, AMI-ID ...)
34	: KMS를 사용해서 EBS 볼륨의 암호화가 가능하다. At Rest, In-fligh 모두 가능하며, 이를 통해 EC2Instance-EBSVolume 간의 암호화를 구축할 수 있다.
43	: SQS는 Auto Scale Out 하므로 configuration이 필요하지 않다.
45	: RDS 고가용성 기능 = 1)읽기 전용 복제본이나 수동 스냅샷은 Multi-Region 가능, 2)자동백업은 Single-Region만 가능.
46	: CodeBuild는 처리를 위해 Auto Scale Out 한다.
47	: SQS Extended Client를 사용하면 2GB 까지의 메시지 처리를 할 수 있다.
50	: Step Functions은 두가지 유형 존재 1)Standard=비용이 많이 들거나 장기 프로세스,  2)Express=이벤트비율이 높고, 기간이 짧은 부하 (초당 100,000개 처리 가능)
52	: CodeDeploy의 EC2 배포 유형에  Rolling(+batch),Immutable 은 없다.  있는거=In-Place, Blue/Green   ECS에 배포할때는 Blue/Green만 됨 (Consists of Linear/Canary/AllAtOnce)
53	: ALB는 cross-zone이 Default로 활성화 되어 있음. 근데 왜 비균등? -> 후보1)Sticky Session, 후보2)고용량 인스턴스에 트래픽이 몰림.
58	: 
 - 암호화과정
   1) GenerateDataKey 호출
   2) PlainTextKey와 암호화된 DataKey 받음.
   3) PlainTextKey로 내 파일 암호화.
 - 복호화과정
   1) Decrypt 호출
   2) 암호화된 DataKey를 복호화해서 PlainTextKey를 얻음
   3) PlainTextKey로 내 파일 복호화.
65	: Redis는 Memcached보다 신뢰성이 높다. 그 이유는 Memcached는 단순하게 설계된 반면, Redis는 스냅샷,복제,트랜잭션 기능을 지원하기 때문이다.


[유데미 4회차]
1	: Redis Elastic Cache는 정렬 기능을 제공한다 (Sorted Set)
2	: 새로운 환경을 독립적으로 만드는게 관행이다.
6	: CI/CD 의 respotitory의 후보는 S3/CodeCommit 두가지가 될 수 있다.
7	: CodeBuild의 종속성을 S3에 캐싱하면 좋다.
8	: Kinesis Agent는 데이터를 모니터링하고 새 데이터를 Streams로 전송하는데에 최적화 되어있다.
11	: ELB vs ASG  -> 인스턴스의 갯수를 늘리는건 ELB가 아니라 ASG의 역할이다. (AGS + CloudWatchMetric/CloudWatchAlarm 통합)
13	: CloudWatch + S3 통합으로 S3에 로그를 저장할 수 있다.
17	: Immutable은 가장 느린 배포 방식이다. AllAtOnce 방식은 가장 빠른 배포방식이며, 약간의 Downtime이 존재한다.
24	: X-Ray는 EC2의 RAM 통계를 추출할 수 없다.
26	: Cross-Account 권한 부여 절차
 - 1) A로 정책생성
   2) A로 정책에 B에 대한 신뢰정책 추가
   3) B에서 정책 Assume
27	: ALB의 Target 설정 가능 대상  1)인스턴스ID, 2)Lambda, 3)private IP (퍼블릭IP 안됨.)
29	: 사용자의 관리는 필요 없지만, 서비스에 대한 인증만 처리하고 싶다면 Cognito Identity Pool을 사용하자.
31	: CloudFront로 정적/동적 컨텐츠 모두 제공 가능하다. 특히 Multi-Origin으로 그룹설정을 하면 정적/동적 컨텐츠를 동시에 제공할 수도 있다.
32	: 런타임에 Lambda Function이 사용할 수 있는 최대 메모리는 10GB이다.
42	: DynamoDB 테이블의 데이터를 모두 삭제할 거라면, 왠만하면 Delete로 지워버리는게 빠르다.
43	: SSE-C 가 포함되어 있는 S3 API 요청은 반드시 HTTPS 프로토콜을 사용해야 한다. (SSE-KMS, SSE-S3, CSE 세가지는 HTTPS가 반드시 필요한건 아니다)
44	: CodeCommit Repository는 전송중/저장중 데이터 모두 암호화 한다. 개발자가 코드를 암호화할 필요는 없다.
46	: KMS 암호화 S3 API 요청은 'x-amz-server-side-encryption': 'aws:kms'를 포함해야 한다. 'SSE:KMS'가 아니다.
53	: Lambda Invoke Trigger로, Custom Source 같은건 없다. CloudWatch Event 규칙을 만들어서 Invoke 해줘야 한다.
54	: ProjectArtifacts는 Build의 결과물이다. 빌드가 끝나고 결과물을 S3에 올리고 싶다면, CodeBuild가 S3에 접근할 수 있는 권한을 부여해야 한다.
63	: ELB-NACL 통합을 하려면, NACL의 1024-65535 포트를 열어줘야 한다. (NAT 게이트웨이도 마찬가지), 리눅스 커널은 32768-61000, 윈도우2003은 1025-5000, 윈도우2008이상은 49152-65535
64	: S3 객체의 로그를 얻으려면, 해당 계정도 S3 객체의 Owner여야 한다.
65	: ㅠ.ㅠ Redis 클러스터 모드까지 알려면 양이 너무 많아.. 패스하자


[유데미 5회차]
3	: 캐시와 백엔드DB는 별도의 시스템이므로, 단일 트랜잭션에서 동시에 수정할 수 없다. 따라서 DB업데이트 후, Cache Invalidate가 정답.
6	: Macie란? 민감한 정보를 검색하고 가시성을 제공하며, 검토 및 수정의 기회를 제공함. SensitiveData:S3Object/Financial = 금융정보타입, ~/CustomIdentifier = 고객식별자타입, ~/Personal
7	: ★주의★ Rolling/AddtionalBatchRolling 에서 중요한거 => Batch Size는 새로운 배포를 진행할 인스턴스의 사이즈를 뜻한다. 남기는 인스턴스가 아니다.
8	: Cognito User Pools의 이벤트 종류에는 Pre-Authentication, Post-Authentication 둘 모두 존재한다. 하지만 인증 후 처리를 원하면 post가 정답.
9	: S3의 페이징은 DynamoDB와 다르다. S3 CLI 명령어에 3가지 옵션을 줄 수 있다. 1)--max-items, 2)--starting-token, 3)--page-size  여기서 3)은 옵션이다.
11	: ★주의★ package.jon, requirement.txt 요런 의존성주입은 "Beanstalk"의 패키지 방법이다. Lambda에 의존성주입을 위해서는 반드시 동일한 폴더에 의존성을 넣고 일괄압축해야 한다.
14	: Cache Lazy Loading이란? cache에 데이터가 없거나 TTL로 인해 만료되었을 경우에만 Cache에 값을 쓴다.
17	: EC2의 인스턴스ID, 보안그룹 등을 조회 하고 싶으면 어디다 물어봐? -> IP/latest/meta-data !!   그럼 IP/latest/user-data는 어따써? -> 인스턴스를 시작할때 사용한 유저 정보 조회할때.
19	: X-Ray는 트레이스당 최대 50개의 Annotations을 인덱싱할 수 있다.
21	: 로드밸런서에 SSL 인증서를 할당하면, 로드밸런서는 HTTPS 엔드포인트를 노출할 수 있다.
22	: CLI로 ECS 띄우는법 -> aws ecs create-service --service-name ecs-simple-service --task-definition ecs-demo --desired-count 10
25	: S3관련 팩트들. ->  1)S3 버전관리는 모든 개체에 적용된다, 2)파일을 덮어쓰면 버전이 증가한다, 3)버전 관리를 활성화하기 전의 모든 파일들은 null 버전을 갖는다.
26	: 502(Bad Gateway)원인 : 프로토콜이 잘못됨
27	: CloudWatch는 cron 이벤트를 발생시킬 수 있다.
30	: RDS도 오토스케일링이 가능하다! Aurora만 있는거 아니다.
32	: STS는 임시인증토큰 서비스이다. 만료기간은 Default로 1시간이며, 15분~1시간 내로 설정 가능하다.
33	: X-Ray 데몬 컨테이너를 띄우는 방법: 1)Fargate에서는 sidecar 컨테이너를 띄워야함. 왜냐하면 기존 컨테이너는 컨트롤이 불가능함. 2)ECS 클래식에서는 기본 EC2에 띄우면 됨.
38	: KMS의 데이터키를 캐싱할수도 있다.(SDK를 사용하면 가능, 하지만 주의해서 써야 함)
42	: S3와 DynamoDB가 지원하는 인터페이스 ★웬만하면 게이트웨이 엔드포인트 쓰자★
 - S3		: 게이트웨이엔드포인트(O), 인퍼테이스엔드포인트(O), API엔드포인트(이런거없음)
 - DynamoDB	: 게이트웨이엔드포인트(O), 인퍼테이스엔드포인트(X), API엔드포인트(이런거없음)
48	: Beanstalk의 .ebextention은 버전관리에 도움을 주지 못한다. 버전 관리는 "수명주기"로 할 수 있다.
50	: CloudFormation 템플릿으로 람다를 띄우려면, S3/직접작성 두가지 방법밖에 없다. 단, 직접작성하는 경우 외부라이브러리는 사용할 수 없다.
53	: ★또틀림★ API Gateway 에서의 인증 - 유저풀(O), 람다Authorizer(O), Standard IAM role and policy(O), STS(X)
55	: S3의 multi-part 업로드는 100MB 이상 파일부터 권장하며, 5GB이상 파일엔 필수다. S3 Transfer Acceleration을 활용하면 빠르게 업로드 가능하다.
56	: CodePipeline은 Lambda를 직접 invoke할 수 없다.
57	: Beanstalk 환경에서, 오래걸리는 작업을 하는 인스턴스를 Dedicated Worker Environment로 설정하면 좋다.
59	: CodeStar는 개발~배포 기능뿐 아니라, 통합UI까지 제공함.
64	: Lambda의 성능향상 기법으로, Provisioned Concurrency가 유용하다. 할당된 동시성을 이용하여 초기화 코드에 걸리는 시간을 단축시킬 수 있다.


[유데미 6회차]
1	: Multi-AZ RDS
 - DB인스턴스에 업데이트가 발생하면, Standby 인스턴스에 "동기적"으로 복제한다.
 - OS Update 순서: (1)Standby에서 유지보수 -> (2)유지보수가 끝난 Standby를 Primary로 승격 -> (3)Old Primary가 다시 Standby가 되며, 유지보수 대상이 됨.
3	: SQS에서 한번에 Polling 가능한 메시지 갯수 = 10개
7	: ELB + ASG + EC2 Integration에서 unhealthy Instance의 교체를 자동화하려면, ASG의 health check type을 EC2에서 ELB로 변경해야 한다.
8	: 인스턴스 용량 전략
 - 예약 인스턴스: 용량 예약을 제공하여, 온디맨드에 비해 가격이 저렴하다. 하지만 온디맨드와 성능은 동일하며, Downtime의 걱정이 없다.
 - 스팟 인스턴스: 사용되고 있지 않은 인스턴스를 요청하여 사용하는 방식이며, 가격이 매우 저렴하다. 하지만 언제든지 통지없이 Down될 수 있다.
15	: CodeDeploy Deployment Groups = 서로 다른 배포그룹에 배포할 수 있다. 배포그룹의 대상은 EC2, ASG의 EC2 둘 모두가 될 수 있다.
19	: Kineis Data Streams의 비용  >>>  Kinesis Firehose의 비용
21	: (1)버킷구성은 최종일관성 특성을 가짐 = 버킷은 삭제후에도 나타날 수 있음. / (2)객체는 강력일관성 특성을 가짐 = 객체는 삭제후에 절대 나타날 수 없음.
22	: 캐시미스가 발생했을때, CloudFront-Viewer-Country 헤더값을 기반으로 리디렉션하려면? 
 - (O) Lambda@Edge를 Origin Request Event와 연관시킨다.
 - (X) Lambda@Edge를 Viewer Request Event와 연관시킨다. -> 캐시미스가 있을때만이 아니라, 모든 뷰어 요청에 대해 실행하게 됨.
 - (X) CloudFront Function을 Origin Request Event와 연관시킨다. -> Origin Request Event에 대한 CloudFront Function은 지원하지 않는 기능임.
 - (X) CloudFront Function을 Viewer Request Event와 연관시킨다. -> 캐시미스가 있을때만이 아니라, 모든 뷰어 요청에 대해 실행하게 됨.
26	: API Gateway - CloudWatch
 - (1) Method 수준의 Metrics에 접근할때만만 요금이 청구된다. (API, Staging 단계의 Metrics는 요금청구 X)
 - (2) 데이터를 로깅할때 STS가 사용됨.
27	: EBS 볼륨의 암호화
 - (1) 새로 만드는 EBS의 볼륨은 암호화 가능.
 - (2) 스냅샷의 암호화 가능
 - (3) 암호화 되지 않은 기존 EBS 볼륨은 암호화 불가능 (단, 스냅샷을 만든후 스냅샷을 암호화하여 이를 달성가능함.)
30	: DynamoDB의 Global Tables 를 사용하면, 전세계에 분포된 사용자의 DB 요청을 low-latency로 처리할 수 있다.
33	: ASG는 Regional 구성요소이다. 그러므로 across AZs 는 가능하지만, across Regions 는 불가능하다.
35	: (1)수백개의 EC2에서 접근 가능한 파일 스토리지? -> EFS.  (2)비용 효율적이지만, 필요할땐 즉시 접근 가능한 클래스? -> Standard-IA
36	: 크로스 스택의 참조 방법 = Export + Fn::InportValue (Not Outputs!)
38	: SQS 메시지의 Default 보관 기간은 ★4일★이며, 원한다면 ★{60초 ~ 14일}★ 로 설정 가능하다.
40	: ELB의 Public IP는 언제든 변경될 수 있다. DNS는 고정적이므로, 클라이언트에서는 웬만하면 DNS를 사용하자.
41	: S3의 버전관리가 비활성화 되어 있다면, Event Notification이 누락될 수도 있다.
42	: ECR에서 Pull하는 방법 = (1)aws ecr get-login -> (2)docker pull 
43	: 5xx 코드
 - 500: 내부 서버 오류
 - 503: 서비스 사용불가 (ALB 대상그룹에 등록된 대상이 없으면 발생)
 - 504: 게이트웨이 시간 초과 
 - 403: Forbidden 권한오류
46	: ECS -> CloudWatch Logs Central 방법 = awslogs driver 활용 및 logConfiguration 정의.
47	: CloudFront - Cognito User Pools 통합을 직접 통합할 수 없다. 이를 실현하기 위해서는 Lambda@Edge가 필요하다. ALB와 통합하는게 바람직하다.
60	: Lambda의  Reserved Concurrency  vs  Provision Concurrency
 - Reserved Concurrency: 일정 동시성을 초과하면 더이상의 동시성 증가가 제한된다.
 - Provision Concurrency: 시작할때부터 일정한 동시성이 제공된다. 하지만 리미트는 없으므로, 동시성이 폭주해도 제한하지 않는다.
62	: Cross Account간 ECS 작업 구성 옮기는 방법
 - A의 로컬머신으로 작업 구성 다운로드.
 - 계정별 매개변수 구성후, B의 S3에 작업 구성 업로드.
 - B의 ECS 콘솔에서 '저장된 구성' 으로 시작.
63	: True로 설정된 EBS의 DeleteOnTermination을 False로 변경하려면, CLI를 이용해야 한다.



 


50	: provisioned 동시성 vs reserved 동시성
